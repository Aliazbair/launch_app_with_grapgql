{"version":3,"sources":["pages/lanuch.js","components/MissonKey.js","pages/launchItem.js","pages/launches.js","App.js","index.js"],"names":["Get_Launcher","gql","Lanuch","flight_number","useParams","useQuery","variables","error","data","loading","console","log","launch","mission_name","launch_year","rocket","rocket_name","rocket_type","rocket_id","className","to","MissonKey","LaunchItem","launch_date_local","is_tentative","classNames","format","Get_All_Launchers","Launches","launches","map","i","App","exact","path","component","client","ApolloClient","uri","cache","InMemoryCache","reactDom","render","ApolloProvider","document","getElementById"],"mappings":"mMAGMA,EAAeC,YAAH,4RAcLC,EAAS,WACpB,IAAMC,EAAkBC,cAAlBD,cACNA,GAAiBA,EACjB,MAAiCE,YAASL,EAAc,CACtDM,UAAW,CAAEH,mBADPI,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAGf,GAHA,EAAqBC,QAGR,OAAO,yCACpB,GAAIF,EAAO,OAAO,uCAClBG,QAAQC,IAAIH,GACZ,MAKIA,EAAKI,OAJPC,EADF,EACEA,aAEAC,GAHF,EAEEX,cAFF,EAGEW,aAHF,IAIEC,OAAUC,EAJZ,EAIYA,YAAaC,EAJzB,EAIyBA,YAAaC,EAJtC,EAIsCA,UAGtC,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,iBAAd,SACE,uBAAMA,UAAU,YAAhB,qBAAqCN,OAEvC,qBAAIM,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,4BAAgDhB,KAChD,qBAAIgB,UAAU,kBAAd,0BAA8CL,QAEhD,gDACA,qBAAIK,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,wBAA4CD,KAC5C,qBAAIC,UAAU,kBAAd,0BAA8CH,KAC9C,qBAAIG,UAAU,kBAAd,0BAA8CF,QAGhD,uBACA,cAAC,IAAD,CAAMG,GAAG,IAAID,UAAU,eAAvB,yBClDOE,EAAY,WACrB,OACI,sBAAKF,UAAU,OAAf,UACI,8BACI,sBAAMA,UAAU,yBADpB,gBAGA,8BACI,sBAAMA,UAAU,wBADpB,gB,kCCHCG,EAAa,SAAC,GASpB,IAAD,IARJV,OACET,EAOE,EAPFA,cACAW,EAME,EANFA,YACAD,EAKE,EALFA,aACAU,EAIE,EAJFA,kBACAC,EAGE,EAHFA,aAGE,EAFFT,OAGF,OACE,mCACE,qBAAKI,UAAU,yCAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBACEA,UAAWM,IAAW,CACpB,eAAgBD,EAChB,eAAgBA,IAHpB,qBAMWX,KAEX,8CAAiBC,KACjB,sCAEE,cAAC,IAAD,CAAQY,OAAO,mBAAf,SAAmCH,UAOvC,qBAAKJ,UAAU,WAAf,SACE,cAAC,IAAD,CAAMC,GAAE,iBAAYjB,GAApB,SACA,wBAAQgB,UAAU,oBAAlB,wCCjCNQ,EAAoB1B,YAAH,+OAgBV2B,EAAW,WACtB,MAAiCvB,YAASsB,GAAlCpB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACf,OADA,EAAqBC,QACD,yCAChBF,EAAc,wCAClBG,QAAQC,IAAIH,EAAKqB,UAEf,sBAAKV,UAAU,YAAf,UACI,oBAAIA,UAAU,wBAAd,sBACA,cAAC,EAAD,IACDX,GACCA,EAAKqB,SAASC,KAAI,SAAClB,EAAQmB,GAAT,OAChB,cAAC,EAAD,CAAoBnB,OAAQA,GAAXmB,MAErB,+CCnBSC,EAXH,WACV,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,yBAAyBC,UAAWjC,UCJxDkC,EAAS,IAAIC,IAAa,CAC9BC,IAAK,WACLC,MAAO,IAAIC,MAGbC,IAASC,OACP,cAACC,EAAA,EAAD,CAAgBP,OAAQA,EAAxB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IADF,SAKFQ,SAASC,eAAe,W","file":"static/js/main.448df193.chunk.js","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\r\nimport { useParams,Link } from \"react-router-dom\";\r\n// create Query\r\nconst Get_Launcher = gql`\r\n  query getSingleLaunch($flight_number: Int!) {\r\n    launch(flight_number: $flight_number) {\r\n      mission_name\r\n      launch_year\r\n      launch_date_local\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const Lanuch = () => {\r\n  let { flight_number } = useParams();\r\n  flight_number = +flight_number;\r\n  const { error, data, loading } = useQuery(Get_Launcher, {\r\n    variables: { flight_number },\r\n  });\r\n  if (loading) return <h1>loading</h1>;\r\n  if (error) return <h1>Error</h1>;\r\n  console.log(data);\r\n  const {\r\n    mission_name,\r\n    flight_number: id,\r\n    launch_year,\r\n    rocket: { rocket_name, rocket_type, rocket_id },\r\n  } = data.launch;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"display-4 my-3\">\r\n        <span className=\"text-dark\">Mission:{mission_name}</span>\r\n      </h2>\r\n      <ul className=\"list-group\">\r\n        <li className=\"list-group-item\">Flight Number :{flight_number}</li>\r\n        <li className=\"list-group-item\">Launch Year :{launch_year}</li>\r\n      </ul>\r\n      <h4>Rochet Details</h4>\r\n      <ul className=\"list-group\">\r\n        <li className=\"list-group-item\">Rocket ID :{rocket_id}</li>\r\n        <li className=\"list-group-item\">Rocket Name :{rocket_name}</li>\r\n        <li className=\"list-group-item\">Rocket Type :{rocket_type}</li>\r\n      </ul>\r\n\r\n      <hr />\r\n      <Link to=\"/\" className=\"btn btn-dark\">Go Back</Link>\r\n    </div>\r\n  );\r\n};\r\n","export const MissonKey = () => {\r\n    return (\r\n        <div className=\"my-3\">\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-success\" /> = Success\r\n            </p>\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-danger\" />= Fail\r\n            </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import classNames from \"classnames\";\r\nimport Moment from \"react-moment\";\r\nimport {Link} from 'react-router-dom'\r\nexport const LaunchItem = ({\r\n  launch: {\r\n    flight_number,\r\n    launch_year,\r\n    mission_name,\r\n    launch_date_local,\r\n    is_tentative,\r\n    rocket,\r\n  },\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"card card-body mb-3 bg-dark text-light\">\r\n        <div className=\"row \">\r\n          <div className=\"col-md-9\">\r\n            <h4\r\n              className={classNames({\r\n                \"text-success\": is_tentative,\r\n                \"text-danger\": !is_tentative,\r\n              })}\r\n            >\r\n              Mission:{mission_name}\r\n            </h4>\r\n            <p>Launch Years:{launch_year}</p>\r\n            <p>\r\n              Date:\r\n              <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\r\n            </p>\r\n            {/* Date:\r\n            <Moment fromNow ago>\r\n              {launch_date_local}\r\n            </Moment> */}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <Link to={`launch/${flight_number}`}>\r\n            <button className=\"btn btn-secondary\">Launch Details</button>\r\n\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nimport { MissonKey } from \"../components/MissonKey\";\r\nimport { LaunchItem } from \"./launchItem\";\r\n\r\n// create Query\r\nconst Get_All_Launchers = gql`\r\n  query {\r\n    launches {\r\n      flight_number\r\n      launch_year\r\n      mission_name\r\n      launch_date_local\r\n      is_tentative\r\n      rocket {\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Launches = () => {\r\n  const { error, data, loading } = useQuery(Get_All_Launchers);\r\n  if (loading) return <h1>loading</h1>;\r\n  if (error) return <h1>Error</h1>;\r\n  console.log(data.launches);\r\n  return (\r\n    <div className=\"container\">\r\n        <h2 className=\"text-center text-info\">Launches</h2>\r\n        <MissonKey/>\r\n      {data &&\r\n        data.launches.map((launch, i) => (\r\n          <LaunchItem key={i} launch={launch} />\r\n        ))}\r\n      <h2>launches</h2>\r\n    </div>\r\n  );\r\n};\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport { Lanuch } from \"./pages/lanuch\";\r\nimport { Launches } from \"./pages/launches\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Launches} />\r\n        <Route exact path=\"/launch/:flight_number\" component={Lanuch} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import reactDom from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\nimport App from \"./App\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"/graphql\",\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nreactDom.render(\r\n  <ApolloProvider client={client}>\r\n    <BrowserRouter>\r\n      <App />,\r\n    </BrowserRouter>\r\n  </ApolloProvider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}